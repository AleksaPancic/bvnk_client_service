package com.example.bvnk_client_service.api;

import com.example.bvnk_client_service.DTO.response.TransactionResponseData;
import com.example.bvnk_client_service.util.constants.CancellationReason;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.Map;


/**
 * This interface defines the methods that the client can use to interact with the transaction service.
 * The interface is implemented by the Feign client, which is generated by Spring Cloud.
 * The client makes HTTP requests to the transaction service using the methods defined in this interface.
 * Note: *One way communication with the transaction service*
 */
@FeignClient(name = "transactionMicroservice", url = "${transactionMicroservice.url}")
public interface TransactionServiceAPI {

	/**
	 * This method is used to add a transaction for a specific client.
	 *
	 * @param headers The headers of the request
	 * @param clientId The ID of the client
	 * @param transactionId The transaction data
	 *
	 * @return The response data of the transaction
	 */
	@PostMapping
	TransactionResponseData addTransactionForClient(@RequestHeader Map<String, Object> headers,
													@RequestParam String clientId,
													@RequestBody TransactionResponseData transactionId);

	/**
	 * This method is used to cancel a transaction for a specific client.
	 *
	 * @param headers The headers of the request
	 * @param clientId The ID of the client
	 * @param transactionId The ID of the transaction
	 * @param cancellationReason The reason for cancelling the transaction
	 *
	 * @return The response data of the transaction
	 */
	@DeleteMapping
	TransactionResponseData cancelTransactionForClient(@RequestHeader Map<String, Object> headers,
													   @RequestParam String clientId,
													   @RequestParam String transactionId,
													   @RequestParam CancellationReason cancellationReason);

}
